"use strict";
var chai = require("chai");
var expect = chai.expect;
var CouchObj = require("../index");
var Obj = new CouchObj();
var ClassAndSerial = { _serial: "seffesgsrgr", _class: "cllgr" };
var ObjwithConf = new CouchObj(ClassAndSerial);
describe("test new object with no conf", function () {
    describe("basic test existence", function () {
        it("expect no errors", function () {
            expect(Obj).to.be.ok;
        });
        it("expect an object", function () {
            expect(Obj).to.be.an("Object");
        });
    });
    describe("properties", function () {
        it("expect _createdAt as number", function () {
            expect(Obj).to.have.property("_createdAt").that.is.a("number");
        });
        it("expect _updatedAt as number", function () {
            expect(Obj).to.have.property("_updatedAt").that.is.a("number");
        });
        it("expect _id as string", function () {
            expect(Obj).to.have.property("_id").that.is.a("string");
        });
    });
});
describe("test new object with class and serial", function () {
    describe("basic test existence", function () {
        it("expect no errors", function () {
            expect(ObjwithConf).to.be.ok;
        });
        it("expect an object", function () {
            expect(ObjwithConf).to.be.an("Object");
        });
    });
    describe("properties", function () {
        it("expect _createdAt as number", function () {
            expect(ObjwithConf).to.have.property("_createdAt").that.is.a("number");
        });
        it("expect _updatedAt as number", function () {
            expect(ObjwithConf).to.have.property("_updatedAt").that.is.a("number");
        });
        it("expect _id as string", function () {
            expect(ObjwithConf).to.have.property("_id").that.is.a("string");
        });
    });
    describe("corrispondence for object with class and serial", function () {
        it("expect that _class is " + ClassAndSerial._class, function () {
            expect(ObjwithConf).to.have.property("_class").that.equal(ClassAndSerial._class);
        });
        it("expect that _serial is " + ClassAndSerial._serial, function () {
            expect(ObjwithConf).to.have.property("_serial").that.equal(ClassAndSerial._serial);
        });
    });
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,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QUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUMzRSxDQUFDLENBQUMsQ0FBQztRQUNILEVBQUUsQ0FBQyxzQkFBc0IsRUFBRTtZQUN2QixNQUFNLENBQUMsV0FBVyxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDcEUsQ0FBQyxDQUFDLENBQUM7SUFHUCxDQUFDLENBQUMsQ0FBQztJQUNILFFBQVEsQ0FBQyxpREFBaUQsRUFBRTtRQUd4RCxFQUFFLENBQUMsd0JBQXdCLEdBQUcsY0FBYyxDQUFDLE1BQU0sRUFBRTtZQUNqRCxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDckYsQ0FBQyxDQUFDLENBQUM7UUFDSCxFQUFFLENBQUMseUJBQXlCLEdBQUcsY0FBYyxDQUFDLE9BQU8sRUFBRTtZQUNuRCxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxjQUFjLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDdkYsQ0FBQyxDQUFDLENBQUM7SUFNUCxDQUFDLENBQUMsQ0FBQztBQUNQLENBQUMsQ0FBQyxDQUFDIiwiZmlsZSI6InRlc3QvbWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIG1vY2hhIGZyb20gXCJtb2NoYVwiO1xuaW1wb3J0ICogYXMgY2hhaSBmcm9tIFwiY2hhaVwiO1xuXG5sZXQgZXhwZWN0ID0gY2hhaS5leHBlY3RcblxuaW1wb3J0IENvdWNoT2JqID0gcmVxdWlyZShcIi4uL2luZGV4XCIpO1xuXG5sZXQgT2JqID0gbmV3IENvdWNoT2JqKCk7XG5cbmxldCBDbGFzc0FuZFNlcmlhbCA9IHsgX3NlcmlhbDogXCJzZWZmZXNnc3JnclwiLCBfY2xhc3M6IFwiY2xsZ3JcIiB9XG5cbmxldCBPYmp3aXRoQ29uZiA9IG5ldyBDb3VjaE9iaihDbGFzc0FuZFNlcmlhbCk7XG5cbmRlc2NyaWJlKFwidGVzdCBuZXcgb2JqZWN0IHdpdGggbm8gY29uZlwiLCBmdW5jdGlvbigpIHtcbiAgICBkZXNjcmliZShcImJhc2ljIHRlc3QgZXhpc3RlbmNlXCIsIGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIGl0KFwiZXhwZWN0IG5vIGVycm9yc1wiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGV4cGVjdChPYmopLnRvLmJlLm9rO1xuICAgICAgICB9KTtcbiAgICAgICAgaXQoXCJleHBlY3QgYW4gb2JqZWN0XCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgZXhwZWN0KE9iaikudG8uYmUuYW4oXCJPYmplY3RcIik7XG4gICAgICAgIH0pO1xuICAgIH0pO1xuICAgIGRlc2NyaWJlKFwicHJvcGVydGllc1wiLCBmdW5jdGlvbigpIHtcblxuXG4gICAgICAgIGl0KFwiZXhwZWN0IF9jcmVhdGVkQXQgYXMgbnVtYmVyXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgZXhwZWN0KE9iaikudG8uaGF2ZS5wcm9wZXJ0eShcIl9jcmVhdGVkQXRcIikudGhhdC5pcy5hKFwibnVtYmVyXCIpO1xuICAgICAgICB9KTtcbiAgICAgICAgaXQoXCJleHBlY3QgX3VwZGF0ZWRBdCBhcyBudW1iZXJcIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBleHBlY3QoT2JqKS50by5oYXZlLnByb3BlcnR5KFwiX3VwZGF0ZWRBdFwiKS50aGF0LmlzLmEoXCJudW1iZXJcIik7XG4gICAgICAgIH0pO1xuICAgICAgICBpdChcImV4cGVjdCBfaWQgYXMgc3RyaW5nXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgZXhwZWN0KE9iaikudG8uaGF2ZS5wcm9wZXJ0eShcIl9pZFwiKS50aGF0LmlzLmEoXCJzdHJpbmdcIik7XG4gICAgICAgIH0pO1xuICAgIH0pO1xufSk7XG5cblxuXG5kZXNjcmliZShcInRlc3QgbmV3IG9iamVjdCB3aXRoIGNsYXNzIGFuZCBzZXJpYWxcIiwgZnVuY3Rpb24oKSB7XG4gICAgZGVzY3JpYmUoXCJiYXNpYyB0ZXN0IGV4aXN0ZW5jZVwiLCBmdW5jdGlvbigpIHtcblxuICAgICAgICBpdChcImV4cGVjdCBubyBlcnJvcnNcIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBleHBlY3QoT2Jqd2l0aENvbmYpLnRvLmJlLm9rO1xuICAgICAgICB9KTtcbiAgICAgICAgaXQoXCJleHBlY3QgYW4gb2JqZWN0XCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgZXhwZWN0KE9iandpdGhDb25mKS50by5iZS5hbihcIk9iamVjdFwiKTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG4gICAgZGVzY3JpYmUoXCJwcm9wZXJ0aWVzXCIsIGZ1bmN0aW9uKCkge1xuXG5cbiAgICAgICAgaXQoXCJleHBlY3QgX2NyZWF0ZWRBdCBhcyBudW1iZXJcIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBleHBlY3QoT2Jqd2l0aENvbmYpLnRvLmhhdmUucHJvcGVydHkoXCJfY3JlYXRlZEF0XCIpLnRoYXQuaXMuYShcIm51bWJlclwiKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGl0KFwiZXhwZWN0IF91cGRhdGVkQXQgYXMgbnVtYmVyXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgZXhwZWN0KE9iandpdGhDb25mKS50by5oYXZlLnByb3BlcnR5KFwiX3VwZGF0ZWRBdFwiKS50aGF0LmlzLmEoXCJudW1iZXJcIik7XG4gICAgICAgIH0pO1xuICAgICAgICBpdChcImV4cGVjdCBfaWQgYXMgc3RyaW5nXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgZXhwZWN0KE9iandpdGhDb25mKS50by5oYXZlLnByb3BlcnR5KFwiX2lkXCIpLnRoYXQuaXMuYShcInN0cmluZ1wiKTtcbiAgICAgICAgfSk7XG5cblxuICAgIH0pO1xuICAgIGRlc2NyaWJlKFwiY29ycmlzcG9uZGVuY2UgZm9yIG9iamVjdCB3aXRoIGNsYXNzIGFuZCBzZXJpYWxcIiwgZnVuY3Rpb24oKSB7XG5cblxuICAgICAgICBpdChcImV4cGVjdCB0aGF0IF9jbGFzcyBpcyBcIiArIENsYXNzQW5kU2VyaWFsLl9jbGFzcywgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBleHBlY3QoT2Jqd2l0aENvbmYpLnRvLmhhdmUucHJvcGVydHkoXCJfY2xhc3NcIikudGhhdC5lcXVhbChDbGFzc0FuZFNlcmlhbC5fY2xhc3MpO1xuICAgICAgICB9KTtcbiAgICAgICAgaXQoXCJleHBlY3QgdGhhdCBfc2VyaWFsIGlzIFwiICsgQ2xhc3NBbmRTZXJpYWwuX3NlcmlhbCwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBleHBlY3QoT2Jqd2l0aENvbmYpLnRvLmhhdmUucHJvcGVydHkoXCJfc2VyaWFsXCIpLnRoYXQuZXF1YWwoQ2xhc3NBbmRTZXJpYWwuX3NlcmlhbCk7XG4gICAgICAgIH0pO1xuICAgICAvLyAgIGl0KFwiZXhwZWN0IHRoYXQgX2lkIGlzIGNvcnJlY3RcIiwgZnVuY3Rpb24oKSB7XG5cblxuICAgICAgIC8vIH0pO1xuXG4gICAgfSk7XG59KTsiXX0=
